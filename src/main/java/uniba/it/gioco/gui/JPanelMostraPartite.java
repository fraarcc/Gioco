/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uniba.it.gioco.gui;

import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import uniba.it.gioco.GameModel;
import uniba.it.gioco.database.InitDatabase;
import uniba.it.gioco.storia.Init;

public class JPanelMostraPartite extends javax.swing.JPanel {
private GameModel gameModel;
private JFrameMain jframeMain;
    /**
     * Creates new form JPanelMostraPartite
     */
    public JPanelMostraPartite(JFrameMain jframeMain, GameModel gameModel) {  

        this.gameModel = gameModel;
        this.jframeMain = jframeMain;
        initComponents();
        
        
        prelievoDati();
    }
  
   
    
    private void prelievoDati(){
        try{
            
            
            ResultSet resultSet = InitDatabase.stampaPartiteDisponibiliResultSet();
            if(!resultSet.next()){
               
            }else{
                String nickname = resultSet.getString("nickname");
                inserimentoTabella(resultSet);
                System.out.println(nickname);
            }
        }catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Errore durante il recupero delle partite disponibili.", "Errore", JOptionPane.ERROR_MESSAGE);
        }
     
           
    }
    private void inserimentoTabella(ResultSet resultSet) throws SQLException{
        DefaultTableModel modelloTabella = (DefaultTableModel) jTablePartite.getModel();
        resultSet.beforeFirst();
        while(resultSet.next()){
            int id = resultSet.getInt("id");
            String nickname = resultSet.getString("nickname");
            Timestamp timestamp = resultSet.getTimestamp("timestamp");
            if(id != 0 && !nickname.isEmpty() && timestamp != null){
            modelloTabella.insertRow(0,new Object [] {id, nickname, timestamp});
       
            }
        }
               
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings(value = "unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePartite = new javax.swing.JTable();
        jButtonCarica = new javax.swing.JButton();
        jButtonCancella = new javax.swing.JButton();

        jTablePartite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", " Nickname", "Timestamp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablePartite);
        if (jTablePartite.getColumnModel().getColumnCount() > 0) {
            jTablePartite.getColumnModel().getColumn(0).setResizable(false);
            jTablePartite.getColumnModel().getColumn(1).setResizable(false);
            jTablePartite.getColumnModel().getColumn(2).setResizable(false);
        }

        jButtonCarica.setText("Carica");
        jButtonCarica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCaricaActionPerformed(evt);
            }
        });

        jButtonCancella.setText("Cancella");
        jButtonCancella.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancellaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCancella)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCarica))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(300, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(248, 248, 248))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCarica)
                    .addComponent(jButtonCancella))
                .addContainerGap(66, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancellaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancellaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCancellaActionPerformed

    private void jButtonCaricaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCaricaActionPerformed
        // TODO add your handling code here:
      int rigaSelezionata = jTablePartite.getSelectedRow();
      if (rigaSelezionata != -1){
          try {
              int idPartita = (int) jTablePartite.getModel().getValueAt(rigaSelezionata, 0);
              Object rigaDati = jTablePartite.getModel().getValueAt(rigaSelezionata, 0);
              String nomeUtente = (String) jTablePartite.getModel().getValueAt(rigaSelezionata, 1);
              System.out.println(nomeUtente);
              Init init = gameModel.getInit();
              gameModel = InitDatabase.caricaPartita(idPartita);
              gameModel.setInit(init);
              System.out.println(gameModel.getGiocatore().getNickname());
              jframeMain.updateCards(gameModel);
              jframeMain.showCard("inGame");
          } catch (IOException ex) {
              Logger.getLogger(JPanelMostraPartite.class.getName()).log(Level.SEVERE, null, ex);
          }
         
      }  
    }//GEN-LAST:event_jButtonCaricaActionPerformed


    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancella;
    private javax.swing.JButton jButtonCarica;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePartite;
    // End of variables declaration//GEN-END:variables
}
